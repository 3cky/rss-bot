syntax = "proto3";

package bot;

option go_package = "github.com/ItalyPaleAle/rss-bot/service";

import "messages.proto";

// Bot is the service that is used to create custom actions
service Bot {
  // Connect is the request that is sent by the bot to the server to connect, and it establishes a stream to receive incomingmessages
  rpc Connect(ConnectRequest) returns (stream MessagesStream);

  // SendMessage is used to send a message to a chat
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);

  // RespondToCommand is used to respond to a command from the user
  // For commands sent in private chats, this just sends a regular message
  // In groups, this replies to a specific message
  rpc RespondToCommand(RespondToCommandRequest) returns (RespondToCommandResponse);

  // EditTextMessage is used to edit a text message
  rpc EditTextMessage(EditTextMessageRequest) returns (EditTextMessageResponse);
}

// ConnectRequest is the message sent by the action provider to the server once it creates a connection
message ConnectRequest {
  // Identifier of this action provider
  string name = 1;

  // Display name of this action provider
  string display_name = 2;

  // Help text for this action provider
  string help_text = 3;

  // List of routes (as regular expression strings) that this action provider can handle
  repeated string routes = 10;
}

// MessagesStream is the stream of incoming messages that the server sends to the action provider
message MessagesStream {
  // Incoming message
  InMessage message = 1;
}

// SendMessageRequest is the request object for the SendMessage action
message SendMessageRequest {
  // Message to send
  OutMessage message = 1;
}

// SendMessageResponse is the response object for the SendMessage action
message SendMessageResponse {
  // Message sent
  SentMessage sent_message = 1;
}

// RespondToCommmandRequest is the request object for the RespondToCommand action
message RespondToCommandRequest {
  // Message to respond to
  InMessage message = 1;

  // Response to send
  OutMessage response = 2;
}

// RespondToCommandResponse is the response object for the RespondToCommand action
message RespondToCommandResponse {
  // Message sent
  SentMessage sent_message = 1;
}

// EditTextMessageRequest is the request object for the EditTextMessage action
message EditTextMessageRequest {
  // ID of the message that was sent
  SentMessage message = 1;

  // Content
  OutTextMessage text = 10;

  // Options
  OutMessageOptions options = 20;
}

// EditTextMessageResponse is the response object for the EditTextMessage action
message EditTextMessageResponse {
  // Currently empty
}
